// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	monitoring "github.com/neutree-ai/neutree/internal/observability/monitoring"
	mock "github.com/stretchr/testify/mock"
)

// MockConfigSyncer is an autogenerated mock type for the ConfigSyncer type
type MockConfigSyncer struct {
	mock.Mock
}

type MockConfigSyncer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConfigSyncer) EXPECT() *MockConfigSyncer_Expecter {
	return &MockConfigSyncer_Expecter{mock: &_m.Mock}
}

// SyncMetricsCollectConfig provides a mock function with given fields: metricsMonitorMap
func (_m *MockConfigSyncer) SyncMetricsCollectConfig(metricsMonitorMap map[string]monitoring.MetricsMonitor) error {
	ret := _m.Called(metricsMonitorMap)

	if len(ret) == 0 {
		panic("no return value specified for SyncMetricsCollectConfig")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(map[string]monitoring.MetricsMonitor) error); ok {
		r0 = rf(metricsMonitorMap)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockConfigSyncer_SyncMetricsCollectConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SyncMetricsCollectConfig'
type MockConfigSyncer_SyncMetricsCollectConfig_Call struct {
	*mock.Call
}

// SyncMetricsCollectConfig is a helper method to define mock.On call
//   - metricsMonitorMap map[string]monitoring.MetricsMonitor
func (_e *MockConfigSyncer_Expecter) SyncMetricsCollectConfig(metricsMonitorMap interface{}) *MockConfigSyncer_SyncMetricsCollectConfig_Call {
	return &MockConfigSyncer_SyncMetricsCollectConfig_Call{Call: _e.mock.On("SyncMetricsCollectConfig", metricsMonitorMap)}
}

func (_c *MockConfigSyncer_SyncMetricsCollectConfig_Call) Run(run func(metricsMonitorMap map[string]monitoring.MetricsMonitor)) *MockConfigSyncer_SyncMetricsCollectConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[string]monitoring.MetricsMonitor))
	})
	return _c
}

func (_c *MockConfigSyncer_SyncMetricsCollectConfig_Call) Return(_a0 error) *MockConfigSyncer_SyncMetricsCollectConfig_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfigSyncer_SyncMetricsCollectConfig_Call) RunAndReturn(run func(map[string]monitoring.MetricsMonitor) error) *MockConfigSyncer_SyncMetricsCollectConfig_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockConfigSyncer creates a new instance of MockConfigSyncer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConfigSyncer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConfigSyncer {
	mock := &MockConfigSyncer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
