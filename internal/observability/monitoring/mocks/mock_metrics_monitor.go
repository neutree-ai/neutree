// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	monitoring "github.com/neutree-ai/neutree/internal/observability/monitoring"
	mock "github.com/stretchr/testify/mock"
)

// MockMetricsMonitor is an autogenerated mock type for the MetricsMonitor type
type MockMetricsMonitor struct {
	mock.Mock
}

type MockMetricsMonitor_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMetricsMonitor) EXPECT() *MockMetricsMonitor_Expecter {
	return &MockMetricsMonitor_Expecter{mock: &_m.Mock}
}

// GetMetricsScrapeTargetsConfig provides a mock function with no fields
func (_m *MockMetricsMonitor) GetMetricsScrapeTargetsConfig() ([]monitoring.MetricsScrapeTargetsConfig, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetMetricsScrapeTargetsConfig")
	}

	var r0 []monitoring.MetricsScrapeTargetsConfig
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]monitoring.MetricsScrapeTargetsConfig, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []monitoring.MetricsScrapeTargetsConfig); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]monitoring.MetricsScrapeTargetsConfig)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockMetricsMonitor_GetMetricsScrapeTargetsConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMetricsScrapeTargetsConfig'
type MockMetricsMonitor_GetMetricsScrapeTargetsConfig_Call struct {
	*mock.Call
}

// GetMetricsScrapeTargetsConfig is a helper method to define mock.On call
func (_e *MockMetricsMonitor_Expecter) GetMetricsScrapeTargetsConfig() *MockMetricsMonitor_GetMetricsScrapeTargetsConfig_Call {
	return &MockMetricsMonitor_GetMetricsScrapeTargetsConfig_Call{Call: _e.mock.On("GetMetricsScrapeTargetsConfig")}
}

func (_c *MockMetricsMonitor_GetMetricsScrapeTargetsConfig_Call) Run(run func()) *MockMetricsMonitor_GetMetricsScrapeTargetsConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMetricsMonitor_GetMetricsScrapeTargetsConfig_Call) Return(_a0 []monitoring.MetricsScrapeTargetsConfig, _a1 error) *MockMetricsMonitor_GetMetricsScrapeTargetsConfig_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockMetricsMonitor_GetMetricsScrapeTargetsConfig_Call) RunAndReturn(run func() ([]monitoring.MetricsScrapeTargetsConfig, error)) *MockMetricsMonitor_GetMetricsScrapeTargetsConfig_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockMetricsMonitor creates a new instance of MockMetricsMonitor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMetricsMonitor(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMetricsMonitor {
	mock := &MockMetricsMonitor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
