apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "neutree.fullname" . }}-post-migration-hook-job-{{ .Release.Revision }}
  labels:
    {{- include "neutree.labels" . | nindent 4 }}
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 20
  template:
    metadata:
      labels:
        app.kubernetes.io/component: neutree-post-migration-hook-job
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}    
      serviceAccountName: {{ include "neutree.fullname" . }}-sa
      initContainers:
        - name: wait-migration-job
          image: "{{ .Values.k8sWaitFor.image.repository }}:{{ .Values.k8sWaitFor.image.tag}}"
          imagePullPolicy: {{ .Values.k8sWaitFor.image.pullPolicy }}
          args:
            - job
            - {{ include "neutree.fullname" . }}-migration-job-{{.Release.Revision }}
            - -n
            - {{ .Release.Namespace }}
        - name: copy-seed-sql
          image: "{{.Values.dbScripts.image.repository }}:{{.Values.dbScripts.image.tag | default .Chart.AppVersion  }}"
          imagePullPolicy: {{.Values.dbScripts.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - "cp -r /db/seed/* /seed/"
          volumeMounts:
            - name: seed
              mountPath: /seed
      containers:
      - name: post-migration-hook
        image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
        imagePullPolicy: IfNotPresent
        command: ["bash", "-c"]
        args:
          - 'for file in $$(find /seed -name "*.sql" | sort); do echo "Executing seed file:" $$file; psql postgres://{{.Values.db.user }}:{{.Values.db.password }}@{{ include "neutree.fullname" .}}-postgresql-service:5432/{{.Values.db.name }}?sslmode=disable -f $$file || exit 1; done'
        volumeMounts:
          - name: seed
            mountPath: /seed
      volumes:
        - name: seed
          emptyDir: {}
      restartPolicy: OnFailure 