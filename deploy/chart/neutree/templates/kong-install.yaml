---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "neutree.fullname" . }}-kong-post-upgrade-migrations-{{ .Release.Revision}}
  labels:
    {{- include "neutree.labels" . | nindent 4 }}
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 20
  template:
    metadata:
      name: kong-post-upgrade-migrations
      labels:
        app.kubernetes.io/component: kong-post-upgrade-migrations
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}    
      serviceAccountName: {{ include "neutree.fullname" . }}-sa
      initContainers:
        - name: wait-postgresql
          image: {{.Values.k8sWaitFor.image.repository }}:{{.Values.k8sWaitFor.image.tag }}
          imagePullPolicy: {{.Values.k8sWaitFor.image.pullPolicy }}
          args:
            - pod
            - -lapp.kubernetes.io/component=neutree-postgresql
        - name: wait-migration-job
          image: "{{ .Values.k8sWaitFor.image.repository }}:{{ .Values.k8sWaitFor.image.tag}}"
          imagePullPolicy: {{ .Values.k8sWaitFor.image.pullPolicy }}
          args:
            - job
            - {{ include "neutree.fullname" . }}-migration-job-{{.Release.Revision }}
            - -n
            - {{ .Release.Namespace }}
      containers:
      - name: kong-post-upgrade-migrations
        image: {{ .Values.kong.image.repository }}:{{ .Values.kong.image.tag }}
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "aippp"
        - name: KONG_PG_HOST
          value: "{{ include "neutree.fullname" . }}-postgresql-service"
        - name: KONG_PG_PASSWORD
          value: "kong_admin_password"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SCHEMA
          value: "kong"
        - name: KONG_PG_USER
          value: "kong_admin"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        args: [ "kong", "migrations", "finish" ]
        volumeMounts:
        - name: kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-tmp
          mountPath: /tmp
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: kong-kong-token
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "neutree.fullname" . }}-kong-pre-upgrade-migrations-{{ .Release.Revision}}
  labels:
    {{- include "neutree.labels" . | nindent 4 }}
spec:
  backoffLimit:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: kong-pre-upgrade-migrations
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}    
      serviceAccountName: {{ include "neutree.fullname" . }}-sa
      initContainers:
        - name: wait-postgresql
          image: {{.Values.k8sWaitFor.image.repository }}:{{.Values.k8sWaitFor.image.tag }}
          imagePullPolicy: {{.Values.k8sWaitFor.image.pullPolicy }}
          args:
            - pod
            - -lapp.kubernetes.io/component=neutree-postgresql
        - name: wait-migration-job
          image: "{{ .Values.k8sWaitFor.image.repository }}:{{ .Values.k8sWaitFor.image.tag}}"
          imagePullPolicy: {{ .Values.k8sWaitFor.image.pullPolicy }}
          args:
            - job
            - {{ include "neutree.fullname" . }}-migration-job-{{.Release.Revision }}
            - -n
            - {{ .Release.Namespace }}
      containers:
      - name: kong-upgrade-migrations
        image: {{ .Values.kong.image.repository }}:{{.Values.kong.image.tag}}
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
        env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "aippp"
        - name: KONG_PG_HOST
          value: "{{ include "neutree.fullname" . }}-postgresql-service"
        - name: KONG_PG_PASSWORD
          value: "kong_admin_password"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SCHEMA
          value: "kong"
        - name: KONG_PG_USER
          value: "kong_admin"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        args: [ "kong", "migrations", "up" ]
        volumeMounts:
        - name: kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-tmp
          mountPath: /tmp
        resources:
          {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-tmp
        emptyDir:
          sizeLimit: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "neutree.fullname" . }}-kong-admin
  labels:
    {{- include "neutree.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - name: kong-admin
    port: 8001
    targetPort: 8001
    protocol: TCP
  selector:
    app.kubernetes.io/component: {{ include "neutree.fullname" . }}-kong

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "neutree.fullname" . }}-kong-manager
  labels:
    {{- include "neutree.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  selector:
    app.kubernetes.io/component: {{ include "neutree.fullname" . }}-kong
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "neutree.fullname" . }}-kong-proxy
  labels:
    {{- include "neutree.labels" . | nindent 4 }}
spec:
  type: {{ .Values.kong.proxyService.type }}
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/component: {{ include "neutree.fullname" . }}-kong
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "neutree.fullname" . }}-kong
  labels:
    {{- include "neutree.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: {{ include "neutree.fullname" . }}-kong
  template:
    metadata:
      labels:
        app.kubernetes.io/component: {{ include "neutree.fullname" . }}-kong
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}    
      serviceAccountName: {{ include "neutree.fullname" . }}-sa
      initContainers:
      - name: clear-stale-pid
        image: {{ .Values.kong.image.repository }}:{{ .Values.kong.image.tag }}
        imagePullPolicy: {{ .Values.kong.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "aippp"
        - name: KONG_PG_HOST
          value: "{{ include "neutree.fullname" . }}-postgresql-service"
        - name: KONG_PG_PASSWORD
          value: "kong_admin_password"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SCHEMA
          value: "kong"
        - name: KONG_PG_USER
          value: "kong_admin"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp
      - name: wait-for-db
        image: {{ .Values.kong.image.repository }}:{{.Values.kong.image.tag}}
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "aippp"
        - name: KONG_PG_HOST
          value: "{{ include "neutree.fullname" . }}-postgresql-service"
        - name: KONG_PG_PASSWORD
          value: "kong_admin_password"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SCHEMA
          value: "kong"
        - name: KONG_PG_USER
          value: "kong_admin"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        args: [ "/bin/bash", "-c", "export KONG_NGINX_DAEMON=on KONG_PREFIX=`mktemp -d` KONG_KEYRING_ENABLED=off; until kong start; do echo 'waiting for db'; sleep 1; done; kong stop"]
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
        resources:
          {}
      containers:
      - name: "proxy"
        image: {{ .Values.kong.image.repository }}:{{ .Values.kong.image.tag }}
        imagePullPolicy: {{ .Values.kong.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "aippp"
        - name: KONG_PG_HOST
          value: "{{ include "neutree.fullname" . }}-postgresql-service"
        - name: KONG_PG_PASSWORD
          value: "kong_admin_password"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SCHEMA
          value: "kong"
        - name: KONG_PG_USER
          value: "kong_admin"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: LUA_PATH
          value: "/neutree-kong-plugin/?.lua;;"
        - name: KONG_PLUGINS
          value: "bundled,neutree-ai-statistics"
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin
          containerPort: 8001
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: kong-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-kong-tmp
            mountPath: /tmp
          - name: neutree-ai-statistics
            mountPath: /neutree-kong-plugin/kong/plugins/neutree-ai-statistics
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        {{- with .Values.auth.resources }}
        resources:
          {{- toYaml . | nindent 12 }}
        {{- end }}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-kong-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-kong-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: neutree-ai-statistics
          configMap:
            name: neutree-ai-statistics
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "neutree.fullname" . }}-kong-init-migrations-{{ .Release.Revision }}
  labels:
    {{- include "neutree.labels" . | nindent 4 }}
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 20
  template:
    metadata:
      name: kong-init-migrations
      labels:
        app.kubernetes.io/component: kong-init-migrations
    spec:
      {{- with.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "neutree.fullname" . }}-sa
      initContainers:
        - name: wait-postgresql
          image: {{.Values.k8sWaitFor.image.repository }}:{{.Values.k8sWaitFor.image.tag }}
          imagePullPolicy: {{.Values.k8sWaitFor.image.pullPolicy }}
          args:
            - pod
            - -lapp.kubernetes.io/component=neutree-postgresql
        - name: wait-migration-job
          image: "{{ .Values.k8sWaitFor.image.repository }}:{{ .Values.k8sWaitFor.image.tag}}"
          imagePullPolicy: {{ .Values.k8sWaitFor.image.pullPolicy }}
          args:
            - job
            - {{ include "neutree.fullname" . }}-migration-job-{{.Release.Revision }}
            - -n
            - {{ .Release.Namespace }}
      containers:
      - name: kong-migrations
        image: {{ .Values.kong.image.repository }}:{{ .Values.kong.image.tag}}
        imagePullPolicy: {{ .Values.kong.image.pullPolicy }}
        securityContext:

          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PG_DATABASE
          value: "aippp"
        - name: KONG_PG_HOST
          value: "{{ include "neutree.fullname" . }}-postgresql-service"
        - name: KONG_PG_PASSWORD
          value: "kong_admin_password"
        - name: KONG_PG_PORT
          value: "5432"
        - name: KONG_PG_SCHEMA
          value: "kong"
        - name: KONG_PG_USER
          value: "kong_admin"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        args: [ "kong", "migrations", "bootstrap" ]
        volumeMounts:
        - name: kong-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-kong-tmp
          mountPath: /tmp

        resources:
          {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
      - name: kong-kong-prefix-dir
        emptyDir:
          sizeLimit: 256Mi
      - name: kong-kong-tmp
        emptyDir:
          sizeLimit: 1Gi
