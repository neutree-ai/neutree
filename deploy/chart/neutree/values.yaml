# Default values for neutree.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

jwtSecret: "mDCvM4zSk0ghmpyKhgqWb0g4igcOP0Lp"
imagePullSecrets: []

system:
  grafana:
    url: ""

metrics:
  remoteWriteUrl: ""

k8sWaitFor:
  image:
    repository: ghcr.io/groundnuty/k8s-wait-for
    tag: "v2.0"
    pullPolicy: IfNotPresent

dbScripts:
  image:
    repository: neutree-ai/neutree-db-scripts
    tag: ""
    pullPolicy: IfNotPresent

db:
  image:
    repository: postgres
    tag: "13"
    pullPolicy: IfNotPresent
  user: postgres
  password: pgpassword
  name: aippp
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 2
      memory: 2Gi
  persistence:
    enabled: true
    size: 40Gi
    accessModes:
      - ReadWriteOnce
  service:
    type: ClusterIP
  nodeSelector: {}
  tolerations: []
  affinity: {}

auth:
  image:
    repository: supabase/gotrue
    tag: "v2.170.0"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP

migration:
  image:
    repository: migrate/migrate
    tag: "latest"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

postgrest:
  image:
    repository: postgrest/postgrest
    tag: "latest"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP

postgresmeta:
  image:
    repository: supabase/postgres-meta
    tag: "v0.86.0"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP

core:
  image:
    repository: neutree-ai/neutree-core
    tag: ""
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  server:
    service:
      type: ClusterIP

api:
  image:
    repository: neutree-ai/neutree-api
    tag: ""
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  replicaCount: 1
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP

vmagent:
  image:
    repository: victoriametrics/vmagent
    tag: "v1.115.0"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  persistence:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce

kong:
  image:
    repository: kong/kong
    tag: "3.9"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 1
      memory: 2Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  proxyService:
    type: LoadBalancer

vector:
  image:
    repository: timberio/vector
    tag: 0.47.0-debian
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

jwtCli:
  image:
    repository: bitnami/jwt-cli
    tag: "latest"
    pullPolicy: IfNotPresent

victoria-metrics-cluster:
  enabled: true
  global:
    image:
      # -- Image registry, that can be shared across multiple helm charts
      registry: ""
  vmselect:
    replicaCount: 1
  vminsert:
    replicaCount: 1
    service:
      type: LoadBalancer
  vmstorage:
    replicaCount: 1
    persistentVolume:
      size: 40Gi

grafana:
  enabled: true
  image:
    # -- The Docker registry
    registry: docker.io
    # -- Docker image repository
    repository: grafana/grafana
    # Overrides the Grafana image tag whose default is the chart appVersion
    tag: "11.5.3"

  testFramework:
    enabled: false

  persistence:
    enabled: true
    size: 1Gi

  initChownData:
    enabled: false

  grafana.ini:
    auth.anonymous:
      enabled: true
    dashboards:
    # Path to the default home dashboard. If this value is empty, then Grafana uses StaticRootPath + "dashboards/home.json"
      default_home_dashboard_path: /var/lib/grafana/dashboards/default_grafana_dashboard.json
    analytics:
      check_for_plugin_updates: false
      check_for_updates: false
      enabled: false
      reporting_enabled: false
    plugins:
      public_key_retrieval_disabled: true
    security:
      preinstall_disabled: true
      allow_embedding: true
    grafana_net:
      url: ""
  dashboardProviders:
    dashboardproviders.yaml:
      - name: neutree
        orgId: 1
        folder: ''
        type: file
        options:
          path: /var/lib/grafana/dashboards
  assertNoLeakedSecrets: false

  adminUser: admin
  adminPassword: admin123

  extraConfigmapMounts:
  - name: datasources
    mountPath: /etc/grafana/provisioning/datasources
    configMap: grafana-datasources
    readOnly: true
    optional: false
  - name: dashboards
    mountPath: /var/lib/grafana/dashboards
    configMap: grafana-dashboards
    readOnly: true
  service:
    enabled: true
    type: LoadBalancer





