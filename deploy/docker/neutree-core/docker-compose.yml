version: "3.8"

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: aippp
    volumes:
      - pg_data:/var/lib/postgresql/data
      - {{ .NeutreeCoreWorkDir}}/db/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - neutree
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 15s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  auth:
    image: supabase/gotrue:v2.170.0
    container_name: auth
    ports:
      - "9999:9999"
    environment:
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: "/verify"
      GOTRUE_JWT_SECRET: {{ .JwtSecret}}
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: api_user
      GOTRUE_DB_DRIVER: postgres
      DB_NAMESPACE: auth
      GOTRUE_API_HOST: 0.0.0.0
      PORT: 9999
      GOTRUE_DISABLE_SIGNUP: "false"
      API_EXTERNAL_URL: http://localhost:9999
      GOTRUE_SITE_URL: http://localhost:9999
      GOTRUE_MAILER_AUTOCONFIRM: "true"
      GOTRUE_LOG_LEVEL: INFO
      DATABASE_URL: "postgres://auth_admin:auth_admin_password@postgres:5432/aippp"
      GOTRUE_COOKIE_KEY: "aippp"
    networks:
      - neutree
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -q -O /dev/null http://localhost:9999/health || exit 1",
        ]
      interval: 2s
      timeout: 15s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  migration:
    image: migrate/migrate
    container_name: migration
    depends_on:
      auth:
        condition: service_healthy
    command: -source=file://migrations -database "postgres://postgres:pgpassword@postgres:5432/aippp?sslmode=disable" up
    volumes:
      - {{ .NeutreeCoreWorkDir}}/db/migrations:/migrations
    networks:
      - neutree
    restart: none
    deploy:
      restart_policy:
        condition: none

  post-migration-hook:
    image: postgres:13
    container_name: post-migration-hook
    networks:
      - neutree
    depends_on:
      migration:
        condition: service_completed_successfully
    volumes:
      - {{ .NeutreeCoreWorkDir}}/db/seed:/seed
    command: 'bash -c ''for file in $$(find /seed -name "*.sql" | sort); do echo "Executing seed file:" $$file; psql postgres://postgres:pgpassword@postgres:5432/aippp?sslmode=disable -f $$file; done'''
    restart: none
    deploy:
      restart_policy:
        condition: none

  postgrest:
    image: postgrest/postgrest:latest
    container_name: postgrest
    environment:
      PGRST_DB_URI: postgres://postgres:pgpassword@postgres:5432/aippp
      PGRST_DB_SCHEMA: api
      PGRST_SERVER_HOST: 0.0.0.0
      PGRST_SERVER_PORT: 6432
      PGRST_JWT_SECRET: {{ .JwtSecret}}
      PGRST_DB_EXTRA_SEARCH_PATH: auth
      PGRST_DB_AGGREGATES_ENABLED: 1
      PGRST_DB_ANON_ROLE: anonymous
    ports:
      - "6432:6432"
    depends_on:
      migration:
        condition: service_completed_successfully
    networks:
      - neutree
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres-meta:
    image: supabase/postgres-meta:v0.86.0
    container_name: postgres-meta
    environment:
      PG_META_HOST: "0.0.0.0"
      PG_META_PORT: 8080
      PG_META_DB_HOST: "postgres"
      PG_META_DB_NAME: "aippp"
      PG_META_DB_USER: "postgres"
      PG_META_DB_PORT: 5432
      PG_META_DB_PASSWORD: "pgpassword"
    ports:
      - "8080:8080"
    networks:
      - neutree
    depends_on:
      migration:
        condition: service_completed_successfully
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  neutree-core:
    image: neutree-ai/neutree-core:{{ .NeutreeCoreVersion}}
    container_name: neutree-core
    privileged: true
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    command:
      - ./neutree-core
      - --storage-access-url=http://postgrest:6432
      - --storage-jwt-secret={{ .JwtSecret}}
      - --controller-workers=5
      - --default-cluster-version=v1
      - --metrics-remote-write-url={{.MetricsRemoteWriteURL}}
      - --gateway-type=kong
      - --gateway-proxy-url=http://{{ .NodeIP}}:80
      - --gateway-admin-url=http://kong:8001
      - --gateway-log-remote-write-url=http://vector:30122
      - --core-server-port=3001
      - --core-server-host=0.0.0.0
    volumes:
      - {{.NeutreeCoreWorkDir}}/collect:/etc/neutree/collect
    ports:
      - 3001:3001
    networks:
      - neutree
    restart: always
    depends_on:
       postgrest:
          condition: service_started
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  neutree-api:
    image: neutree-ai/neutree-api:{{ .NeutreeAPIVersion}}
    container_name: neutree-api
    privileged: true
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    command:
      - ./neutree-api
      - --storage-access-url=http://postgrest:6432
      - --storage-jwt-secret={{ .JwtSecret}}
      - --host=0.0.0.0
      - --port=3000
      - --static-dir=./public
      - --gin-mode=release
      - --auth-endpoint=http://auth:9999
      - --grafana-url={{.GrafanaURL}}
      - --version={{.NeutreeAPIVersion}}
    ports:
      - 3000:3000
    networks:
      - neutree
    restart: always
    depends_on:
      postgrest:
        condition: service_started
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:{{ .VictoriaMetricsVersion}}
    depends_on:
      neutree-core:
          condition: service_started
    ports:
      - 8429:8429
    volumes:
      - vmagentdata:/vmagentdata
      - {{ .NeutreeCoreWorkDir}}/vmagent/prometheus-cluster.yml:/etc/prometheus/prometheus.yml
      - {{ .NeutreeCoreWorkDir}}/collect/metrics:/etc/prometheus/scrape
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--promscrape.configCheckInterval=10s"
      - "--remoteWrite.url={{ .MetricsRemoteWriteURL}}"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  kong-migrations:
    image: kong/kong:{{ .KongVersion}}
    container_name: kong-migrations
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "postgres"
      KONG_PG_DATABASE: "aippp"
      KONG_PG_USER: "kong_admin"
      KONG_PG_PASSWORD: "kong_admin_password"
      KONG_PG_SCHEME: "kong"
    networks:
      - neutree
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  kong-migrations-up:
    image: kong/kong:{{ .KongVersion}}
    container_name: kong-migrations-up
    command: kong migrations up && kong migrations finish
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "postgres"
      KONG_PG_DATABASE: "aippp"
      KONG_PG_USER: "kong_admin"
      KONG_PG_PASSWORD: "kong_admin_password"
      KONG_PG_SCHEME: "kong"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - neutree
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  vector:
    container_name: vector
    image: timberio/vector:{{ .VectorVersion}}
    command:
      - --config-dir
      - /etc/vector/
    ports:
      - 30122:30122
    volumes:
      - {{ .NeutreeCoreWorkDir}}/vector:/etc/vector
    restart: always
    networks:
      - neutree
    depends_on:
      neutree-api:
        condition: service_started
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  kong:
    image: kong/kong:{{ .KongVersion}}
    container_name: kong
    environment:
      KONG_NGINX_HTTP_CLIENT_BODY_BUFFER_SIZE: 20m
      KONG_PLUGINS: bundled,neutree-ai-statistics
      LUA_PATH: "/neutree-kong-plugin/?.lua;;"
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "postgres"
      KONG_PG_DATABASE: "aippp"
      KONG_PG_USER: "kong_admin"
      KONG_PG_PASSWORD: "kong_admin_password"
      KONG_PG_SCHEME: "kong"
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:8002"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    volumes:
      - {{.NeutreeCoreWorkDir}}/kong/plugin:/neutree-kong-plugin
    networks:
      - neutree
    ports:
      - 80:8000
      - 443:8443
      - 8001:8001
      - 8444:8444
      - 8002:8002
    depends_on:
      kong-migrations-up:
        condition: service_completed_successfully
      kong-migrations:
        condition: service_completed_successfully
      vector:
        condition: service_started
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
networks:
  neutree:
    driver: bridge

volumes:
  pg_data:
  vmagentdata: